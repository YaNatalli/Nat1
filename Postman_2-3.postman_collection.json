{
	"info": {
		"_postman_id": "c58a5c6f-145d-470f-9621-1a6e5af8ca41",
		"name": "Postman_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Z_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Z_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Cпарсить respons body d json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Proverka name,age,salary\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Natalli\");\r",
							"    pm.expect(jsonData.age).to.eql(\"35\");\r",
							"   // pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"// Cпарсить request \r",
							"var req_Data = request.data;\r",
							"\r",
							" //Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Test_Name\", function (){\r",
							"    pm.expect(jsonData.name).to.eql(req_Data.name);\r",
							"});\r",
							"console.log(\"Request Name=\" + jsonData.name);\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Test_Age\", function (){\r",
							"    pm.expect(jsonData.age).to.eql(req_Data.age);\r",
							"});\r",
							"console.log(\"Request Age=\" + jsonData.age);\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Test_Salary\", function (){\r",
							"    pm.expect(jsonData.salary).to.eql( + req_Data.salary);\r",
							"});\r",
							"console.log(\"Request Salary=\" + jsonData.salary);\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(\"Vivesti Family:\" + jsonData.family[\"children\"]);\r",
							"\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Verify u_salary_1_5_year\", function (){\r",
							"   pm.expect(jsonData.family.u_salary_1_5_year).to.eql( + req_Data.salary*4);\r",
							"});\r",
							"console.log(\"Vivesti u_salary_1_5_year:\" + jsonData.family.u_salary_1_5_year);\r",
							"console.log(\"Vivesti salary*4:\" + jsonData.salary*4);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Z_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var resp_Get = pm.response.json();\r",
							"//4. Спарсить request.\r",
							"var req_Get = pm.request.url.query.toObject();\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Test_Name\", function () {\r",
							"    pm.expect(resp_Get.name).to.eql(req_Get.name);\r",
							"});\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Test_Age\", function () {\r",
							"    pm.expect(resp_Get.age).to.eql(req_Get.age);\r",
							"});\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Test_Salary\", function () {\r",
							"    pm.expect(resp_Get.salary).to.eql( + req_Get.salary);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(\"Request Family=\" + resp_Get.family[\"children\"]);\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Test_Dog Name\", function () {\r",
							"    pm.expect(resp_Get.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Test_Dog Age\", function () {\r",
							"    pm.expect(resp_Get.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Test_Name Laky\", function () {\r",
							"    pm.expect(resp_Get.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Test_Age=4\", function () {\r",
							"    pm.expect(resp_Get.family.pets.dog.age).to.eql( + \"4\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_3?name=Natalli&age=35&salary=1000",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Natalli"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Z_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3.Спарсить response body в json.\r",
							"var resp_Get = pm.response.json();\r",
							"pm.test(\"Your  name\", function () {\r",
							"    pm.expect(resp_Get.name).to.eql(\"Natalli\");\r",
							"});\r",
							"//4.Спарсить request\r",
							"var req_Get = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Test_Name\", function (){\r",
							"pm.expect(resp_Get.name).to.eql(req_Get.name);\r",
							"});\r",
							"console.log(\"Request Name=\" + req_Get.name);\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"\r",
							"pm.test(\"Test_Age\", function (){\r",
							"pm.expect(resp_Get.age).to.eql( + req_Get.age);\r",
							"});\r",
							"console.log(\"Request Age=\" + req_Get.age);\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"pm.test(\"Test array_Salary\", function (){\r",
							"//pm.expect(resp_Get.salary).to.be.an(\"array\");\r",
							"// pm.expect( + resp_Get.salary([1,2,3])).to.eql( + req_Get.salary([1,2,3]));\r",
							"});\r",
							"console.log(\"Request salary in request=\" + req_Get.salary);\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(\"Request salary in response=\" + resp_Get.salary);\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"Request salary0=\" + resp_Get.salary[0]);\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Request salary1=\" + resp_Get.salary[1]);\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Request salary2=\" + resp_Get.salary[2]);\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Test array_Salary_0\", function (){\r",
							" pm.expect(resp_Get.salary[0]).to.eql( + req_Get.salary[0]);\r",
							"});\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Test array_Salary_1\", function (){\r",
							"   pm.expect(resp_Get.salary[1]).to.eql(req_Get.salary[1]);\r",
							"});\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Test array_Salary_2\", function (){\r",
							"   pm.expect(resp_Get.salary[2]).to.eql(req_Get.salary[2]);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"//18. Передать в окружение переменную name\r",
							"pm.test(\"Get Name\", function (){\r",
							"  pm.environment.set(\"name\", resp_Get.name);\r",
							"});\r",
							"\r",
							"//19. Передать в окружение переменную age\r",
							"pm.test(\"Get Age\", function (){\r",
							"  pm.environment.set(\"age\", resp_Get.age);\r",
							"});\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.test(\"Get Salary\", function (){\r",
							"  pm.environment.set(\"salary\", resp_Get.salary);\r",
							"});\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"pm.test(\"Cucle in consol out salary \", function (){\r",
							"  var array_Salary = [1000,'2000','3000'];\r",
							"  $.each(array_Salary,function(){\r",
							"       console.log('Индекс: ' + index + '; Значение: ' + value);\r",
							"\r",
							"});\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Natalli&age=35&salary=1000&salary=2000&salary=3000",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Natalli"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1000"
						},
						{
							"key": "m_0",
							"value": "1000",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "2000"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Z_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"//pm.test(\"Salary in environment\", function() {\r",
							"   // pm.environment.set(\"salary\",salary);\r",
							"   // var req_Data = request.data;\r",
							"  //pm.getEnvironmentVariable(\"salary\");\r",
							"//pm.req_Data.set({{salary}});\r",
							"//pm.expect(req_Data();\r",
							" //pm.expect(resp_Get.name).to.eql(\"Natalli\");\r",
							"//});\r",
							"console.log(pm.environment.get('salary'));\r",
							" //pm.environment.set(\"age\", resp_Get.age);\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"var resp_Data = pm.response.json();\r",
							"// 7. Спарсить request.\r",
							"var req_Data = request.data;\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"\r",
							"pm.test(\"Test start_qa_salary\", function () {\r",
							"   pm.expect(resp_Data.json().start_qa_salary).to.have(\"start_qa_salary\");\r",
							"   // pm.expect(resp_Get.family.pets.dog).to.have.(\"age\");\r",
							"});\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"// 22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person."
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Natalli",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	]
}